import random
from datetime import datetime

# Lists of adjectives and nouns for generating memorable names
adjectives = [
    "autumn",
    "hidden",
    "bitter",
    "misty",
    "silent",
    "empty",
    "dry",
    "dark",
    "summer",
    "icy",
    "delicate",
    "quiet",
    "white",
    "cool",
    "spring",
    "winter",
    "patient",
    "twilight",
    "dawn",
    "crimson",
    "wispy",
    "weathered",
    "blue",
    "billowing",
    "broken",
    "cold",
    "damp",
    "falling",
    "frosty",
    "green",
    "long",
    "late",
    "lingering",
    "bold",
    "little",
    "morning",
    "muddy",
    "old",
    "red",
    "rough",
    "still",
    "small",
    "sparkling",
    "throbbing",
    "shy",
    "wandering",
    "withered",
    "wild",
    "black",
    "young",
    "holy",
    "solitary",
    "fragrant",
    "aged",
    "snowy",
    "proud",
    "floral",
    "restless",
    "divine",
    "polished",
    "purple",
    "lively",
    "nameless",
    "lucky",
    "oddball",
    "crystal",
]

nouns = [
    "waterfall",
    "river",
    "breeze",
    "moon",
    "rain",
    "wind",
    "sea",
    "morning",
    "snow",
    "lake",
    "sunset",
    "pine",
    "shadow",
    "leaf",
    "dawn",
    "glitter",
    "forest",
    "hill",
    "cloud",
    "meadow",
    "sun",
    "glade",
    "bird",
    "brook",
    "butterfly",
    "bush",
    "dew",
    "dust",
    "field",
    "fire",
    "flower",
    "firefly",
    "feather",
    "grass",
    "haze",
    "mountain",
    "night",
    "pond",
    "darkness",
    "snowflake",
    "silence",
    "sound",
    "sky",
    "shape",
    "surf",
    "thunder",
    "violet",
    "water",
    "wildflower",
    "wave",
    "water",
    "resonance",
    "sun",
    "wood",
    "dream",
    "cherry",
    "tree",
    "fog",
    "frost",
    "voice",
    "paper",
    "frog",
    "smoke",
    "star",
    "silver",
    "brass",
    "gold",
    "copper",
    "rhythm",
]


def generate_experiment_name() -> str:
    """
    Creates a memorable experiment identifier in the format "adjective-noun"
    """
    return f"{random.choice(adjectives)}-{random.choice(nouns)}"


def generate_experiment_id() -> str:
    """
    Creates a unique experiment identifier by combining the memorable name
    with a timestamp
    """
    timestamp = datetime.utcnow().strftime("%Y%m%d-%H%M%S")
    return f"{generate_experiment_name()}-{timestamp}"


if __name__ == "__main__":
    # Example usage
    print(generate_experiment_name())  # e.g., "twilight-river"
    print(generate_experiment_id())  # e.g., "twilight-river-20250318-093747"
